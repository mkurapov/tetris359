
build/output.elf:     file format elf32-littlearm


Disassembly of section .init:

00008000 <_start>:
    8000:	ea00043a 	b	90f0 <previous>

Disassembly of section .text:

000090f0 <main>:
    90f0:	e3a0d902 	mov	sp, #32768	; 0x8000
    90f4:	eb000004 	bl	910c <EnableJTAG>
    90f8:	eb000026 	bl	9198 <InitFrameBuffer>
    90fc:	eb000051 	bl	9248 <Init_SNES>

00009100 <testSNES>:
    9100:	eb000044 	bl	9218 <Get_SNES>
    9104:	eafffffd 	b	9100 <testSNES>

00009108 <haltLoop$>:
    9108:	eafffffe 	b	9108 <haltLoop$>

0000910c <EnableJTAG>:
    910c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9110:	e59f0064 	ldr	r0, [pc, #100]	; 917c <dowaitloop+0xc>
    9114:	e0211001 	eor	r1, r1, r1
    9118:	e5801000 	str	r1, [r0]
    911c:	eb000012 	bl	916c <dowait>
    9120:	e59f0058 	ldr	r0, [pc, #88]	; 9180 <dowaitloop+0x10>
    9124:	e59f1058 	ldr	r1, [pc, #88]	; 9184 <dowaitloop+0x14>
    9128:	e5801000 	str	r1, [r0]
    912c:	eb00000e 	bl	916c <dowait>
    9130:	e0211001 	eor	r1, r1, r1
    9134:	e5801000 	str	r1, [r0]
    9138:	e59f0048 	ldr	r0, [pc, #72]	; 9188 <dowaitloop+0x18>
    913c:	e5901000 	ldr	r1, [r0]
    9140:	e3c11a07 	bic	r1, r1, #28672	; 0x7000
    9144:	e3811a02 	orr	r1, r1, #8192	; 0x2000
    9148:	e5801000 	str	r1, [r0]
    914c:	e59f0038 	ldr	r0, [pc, #56]	; 918c <dowaitloop+0x1c>
    9150:	e5901000 	ldr	r1, [r0]
    9154:	e59f2034 	ldr	r2, [pc, #52]	; 9190 <dowaitloop+0x20>
    9158:	e1c11002 	bic	r1, r1, r2
    915c:	e59f2030 	ldr	r2, [pc, #48]	; 9194 <dowaitloop+0x24>
    9160:	e1811002 	orr	r1, r1, r2
    9164:	e5801000 	str	r1, [r0]
    9168:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

0000916c <dowait>:
    916c:	e3a02f4b 	mov	r2, #300	; 0x12c

00009170 <dowaitloop>:
    9170:	e2522001 	subs	r2, r2, #1
    9174:	1afffffd 	bne	9170 <dowaitloop>
    9178:	e12fff1e 	bx	lr
    917c:	3f200094 	.word	0x3f200094
    9180:	3f200098 	.word	0x3f200098
    9184:	0bc00010 	.word	0x0bc00010
    9188:	3f200000 	.word	0x3f200000
    918c:	3f200008 	.word	0x3f200008
    9190:	00e3ffc0 	.word	0x00e3ffc0
    9194:	0061b6c0 	.word	0x0061b6c0

00009198 <InitFrameBuffer>:
    9198:	e59f2068 	ldr	r2, [pc, #104]	; 9208 <pointerWaitLoop$+0x1c>
    919c:	e59f3068 	ldr	r3, [pc, #104]	; 920c <pointerWaitLoop$+0x20>

000091a0 <mBoxFullLoop$>:
    91a0:	e5920018 	ldr	r0, [r2, #24]
    91a4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    91a8:	1afffffc 	bne	91a0 <mBoxFullLoop$>
    91ac:	e2830101 	add	r0, r3, #1073741824	; 0x40000000
    91b0:	e3800008 	orr	r0, r0, #8
    91b4:	e5820020 	str	r0, [r2, #32]

000091b8 <mBoxEmptyLoop$>:
    91b8:	e5920018 	ldr	r0, [r2, #24]
    91bc:	e3100101 	tst	r0, #1073741824	; 0x40000000
    91c0:	1afffffc 	bne	91b8 <mBoxEmptyLoop$>
    91c4:	e5920000 	ldr	r0, [r2]
    91c8:	e200100f 	and	r1, r0, #15
    91cc:	e3310008 	teq	r1, #8
    91d0:	1afffff8 	bne	91b8 <mBoxEmptyLoop$>
    91d4:	e59f0030 	ldr	r0, [pc, #48]	; 920c <pointerWaitLoop$+0x20>
    91d8:	e5901004 	ldr	r1, [r0, #4]
    91dc:	e3310102 	teq	r1, #-2147483648	; 0x80000000
    91e0:	0a000001 	beq	91ec <pointerWaitLoop$>
    91e4:	13a00000 	movne	r0, #0
    91e8:	112fff1e 	bxne	lr

000091ec <pointerWaitLoop$>:
    91ec:	e59f001c 	ldr	r0, [pc, #28]	; 9210 <pointerWaitLoop$+0x24>
    91f0:	e5900000 	ldr	r0, [r0]
    91f4:	e3300000 	teq	r0, #0
    91f8:	0afffffb 	beq	91ec <pointerWaitLoop$>
    91fc:	e59f3010 	ldr	r3, [pc, #16]	; 9214 <pointerWaitLoop$+0x28>
    9200:	e5830000 	str	r0, [r3]
    9204:	e12fff1e 	bx	lr
    9208:	3f00b880 	.word	0x3f00b880
    920c:	00009080 	.word	0x00009080
    9210:	000090cc 	.word	0x000090cc
    9214:	000090e0 	.word	0x000090e0

00009218 <Get_SNES>:
    9218:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    921c:	e59f41a0 	ldr	r4, [pc, #416]	; 93c4 <Read_Data+0x30>
    9220:	e1d450b0 	ldrh	r5, [r4]
    9224:	eb000016 	bl	9284 <Read_SNES>
    9228:	e1a07000 	mov	r7, r0
    922c:	e1e06005 	mvn	r6, r5
    9230:	e0000006 	and	r0, r0, r6
    9234:	e1c470b0 	strh	r7, [r4]
    9238:	e3a00efa 	mov	r0, #4000	; 0xfa0
    923c:	eb0000df 	bl	95c0 <Wait>
    9240:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    9244:	e12fff1e 	bx	lr

00009248 <Init_SNES>:
    9248:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    924c:	e3a00009 	mov	r0, #9
    9250:	e3a01001 	mov	r1, #1
    9254:	eb000029 	bl	9300 <Init_GPIO>
    9258:	e3a0000b 	mov	r0, #11
    925c:	e3a01001 	mov	r1, #1
    9260:	eb000026 	bl	9300 <Init_GPIO>
    9264:	e3a0000a 	mov	r0, #10
    9268:	e3a01000 	mov	r1, #0
    926c:	eb000023 	bl	9300 <Init_GPIO>
    9270:	e59f214c 	ldr	r2, [pc, #332]	; 93c4 <Read_Data+0x30>
    9274:	e3a03000 	mov	r3, #0
    9278:	e1c230b0 	strh	r3, [r2]
    927c:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    9280:	e12fff1e 	bx	lr

00009284 <Read_SNES>:
    9284:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9288:	e3a00001 	mov	r0, #1
    928c:	eb000036 	bl	936c <Write_Clock>
    9290:	e3a00001 	mov	r0, #1
    9294:	eb00002a 	bl	9344 <Write_Latch>
    9298:	e3a0000c 	mov	r0, #12
    929c:	eb0000c7 	bl	95c0 <Wait>
    92a0:	e3a00000 	mov	r0, #0
    92a4:	eb000026 	bl	9344 <Write_Latch>
    92a8:	e3a04000 	mov	r4, #0
    92ac:	e3a05000 	mov	r5, #0
    92b0:	e3a06001 	mov	r6, #1

000092b4 <pulseLoop>:
    92b4:	e3550010 	cmp	r5, #16
    92b8:	2a00000d 	bcs	92f4 <endPulseLoop>
    92bc:	e3a00006 	mov	r0, #6
    92c0:	eb0000be 	bl	95c0 <Wait>
    92c4:	e3a00000 	mov	r0, #0
    92c8:	eb000027 	bl	936c <Write_Clock>
    92cc:	e3a00006 	mov	r0, #6
    92d0:	eb0000ba 	bl	95c0 <Wait>
    92d4:	eb00002e 	bl	9394 <Read_Data>
    92d8:	e3500000 	cmp	r0, #0
    92dc:	01844006 	orreq	r4, r4, r6
    92e0:	e3a00001 	mov	r0, #1
    92e4:	eb000020 	bl	936c <Write_Clock>
    92e8:	e1a06086 	lsl	r6, r6, #1
    92ec:	e2855001 	add	r5, r5, #1
    92f0:	eaffffef 	b	92b4 <pulseLoop>

000092f4 <endPulseLoop>:
    92f4:	e1a00004 	mov	r0, r4
    92f8:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    92fc:	e12fff1e 	bx	lr

00009300 <Init_GPIO>:
    9300:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9304:	e3a02000 	mov	r2, #0

00009308 <lineLoop>:
    9308:	e3500009 	cmp	r0, #9
    930c:	8240000a 	subhi	r0, r0, #10
    9310:	82822004 	addhi	r2, r2, #4
    9314:	8afffffb 	bhi	9308 <lineLoop>

00009318 <endLineLoop>:
    9318:	e59f30a8 	ldr	r3, [pc, #168]	; 93c8 <Read_Data+0x34>
    931c:	e0822003 	add	r2, r2, r3
    9320:	e5924000 	ldr	r4, [r2]
    9324:	e3a06003 	mov	r6, #3
    9328:	e0000096 	mul	r0, r6, r0
    932c:	e3a05007 	mov	r5, #7
    9330:	e1c44015 	bic	r4, r4, r5, lsl r0
    9334:	e1844011 	orr	r4, r4, r1, lsl r0
    9338:	e5824000 	str	r4, [r2]
    933c:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    9340:	e12fff1e 	bx	lr

00009344 <Write_Latch>:
    9344:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9348:	e3a01009 	mov	r1, #9
    934c:	e59f2074 	ldr	r2, [pc, #116]	; 93c8 <Read_Data+0x34>
    9350:	e3a03001 	mov	r3, #1
    9354:	e1a03113 	lsl	r3, r3, r1
    9358:	e3500000 	cmp	r0, #0
    935c:	05823028 	streq	r3, [r2, #40]	; 0x28
    9360:	1582301c 	strne	r3, [r2, #28]
    9364:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    9368:	e12fff1e 	bx	lr

0000936c <Write_Clock>:
    936c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9370:	e3a0100b 	mov	r1, #11
    9374:	e59f204c 	ldr	r2, [pc, #76]	; 93c8 <Read_Data+0x34>
    9378:	e3a03001 	mov	r3, #1
    937c:	e1a03113 	lsl	r3, r3, r1
    9380:	e3500000 	cmp	r0, #0
    9384:	05823028 	streq	r3, [r2, #40]	; 0x28
    9388:	1582301c 	strne	r3, [r2, #28]
    938c:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    9390:	e12fff1e 	bx	lr

00009394 <Read_Data>:
    9394:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9398:	e3a0100a 	mov	r1, #10
    939c:	e59f3024 	ldr	r3, [pc, #36]	; 93c8 <Read_Data+0x34>
    93a0:	e5932034 	ldr	r2, [r3, #52]	; 0x34
    93a4:	e3a04001 	mov	r4, #1
    93a8:	e1a04114 	lsl	r4, r4, r1
    93ac:	e0022004 	and	r2, r2, r4
    93b0:	e3520000 	cmp	r2, #0
    93b4:	03a00000 	moveq	r0, #0
    93b8:	13a00001 	movne	r0, #1
    93bc:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    93c0:	e12fff1e 	bx	lr
    93c4:	000090f0 	.word	0x000090f0
    93c8:	3f200000 	.word	0x3f200000

000093cc <Menu_Display>:
    93cc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    93d0:	eb000041 	bl	94dc <Draw_Image>
    93d4:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    93d8:	e12fff1e 	bx	lr

000093dc <Menu_Run>:
    93dc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    93e0:	e3a08001 	mov	r8, #1
    93e4:	e3a00001 	mov	r0, #1
    93e8:	e1a05201 	lsl	r5, r1, #4
    93ec:	e1a06281 	lsl	r6, r1, #5
    93f0:	e1a04401 	lsl	r4, r1, #8

000093f4 <menuDisplayLoop>:
    93f4:	ebffff87 	bl	9218 <Get_SNES>
    93f8:	e0047000 	and	r7, r4, r0
    93fc:	e3570000 	cmp	r7, #0
    9400:	1a000006 	bne	9420 <endMenuDisplayLoop>
    9404:	e0057000 	and	r7, r5, r0
    9408:	e3570000 	cmp	r7, #0
    940c:	13a08001 	movne	r8, #1
    9410:	e0067000 	and	r7, r6, r0
    9414:	e3570000 	cmp	r7, #0
    9418:	13a08000 	movne	r8, #0
    941c:	eafffff4 	b	93f4 <menuDisplayLoop>

00009420 <endMenuDisplayLoop>:
    9420:	e1a00008 	mov	r0, r8
    9424:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    9428:	e12fff1e 	bx	lr

0000942c <Draw_Pixel>:
    942c:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
    9430:	e0804501 	add	r4, r0, r1, lsl #10
    9434:	e1a04084 	lsl	r4, r4, #1
    9438:	e59f017c 	ldr	r0, [pc, #380]	; 95bc <endOuterBlockLoop+0x8>
    943c:	e5900000 	ldr	r0, [r0]
    9440:	e18020b4 	strh	r2, [r0, r4]
    9444:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
    9448:	e12fff1e 	bx	lr

0000944c <Draw_LineH>:
    944c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9450:	e1a04000 	mov	r4, r0
    9454:	e1a05001 	mov	r5, r1
    9458:	e1a06002 	mov	r6, r2
    945c:	e1a07003 	mov	r7, r3
    9460:	e3a08001 	mov	r8, #1

00009464 <lineHLoop>:
    9464:	e1580007 	cmp	r8, r7
    9468:	8a000006 	bhi	9488 <endLineHLoop>
    946c:	e1a00004 	mov	r0, r4
    9470:	e1a01005 	mov	r1, r5
    9474:	e1a02006 	mov	r2, r6
    9478:	ebffffeb 	bl	942c <Draw_Pixel>
    947c:	e2888001 	add	r8, r8, #1
    9480:	e2844001 	add	r4, r4, #1
    9484:	eafffff6 	b	9464 <lineHLoop>

00009488 <endLineHLoop>:
    9488:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    948c:	e12fff1e 	bx	lr

00009490 <Draw_Box>:
    9490:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9494:	e1a05000 	mov	r5, r0
    9498:	e1a06001 	mov	r6, r1
    949c:	e1a07002 	mov	r7, r2
    94a0:	e1a08003 	mov	r8, r3
    94a4:	e1a09004 	mov	r9, r4
    94a8:	e3a0a001 	mov	sl, #1

000094ac <lineVLoop>:
    94ac:	e15a0009 	cmp	sl, r9
    94b0:	8a000007 	bhi	94d4 <endLineVLoop>
    94b4:	e1a00005 	mov	r0, r5
    94b8:	e1a01006 	mov	r1, r6
    94bc:	e1a02007 	mov	r2, r7
    94c0:	e1a03008 	mov	r3, r8
    94c4:	ebffffe0 	bl	944c <Draw_LineH>
    94c8:	e28aa001 	add	sl, sl, #1
    94cc:	e2866001 	add	r6, r6, #1
    94d0:	eafffff5 	b	94ac <lineVLoop>

000094d4 <endLineVLoop>:
    94d4:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    94d8:	e12fff1e 	bx	lr

000094dc <Draw_Image>:
    94dc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    94e0:	e1a04000 	mov	r4, r0
    94e4:	e0d450b2 	ldrh	r5, [r4], #2
    94e8:	e0d460b2 	ldrh	r6, [r4], #2
    94ec:	e0d470b2 	ldrh	r7, [r4], #2
    94f0:	e0d480b2 	ldrh	r8, [r4], #2
    94f4:	e3a09000 	mov	r9, #0

000094f8 <outerImageLoop>:
    94f8:	e1590008 	cmp	r9, r8
    94fc:	2a00000d 	bcs	9538 <endOuterImageLoop>
    9500:	e3a0a000 	mov	sl, #0

00009504 <innerImageLoop>:
    9504:	e15a0007 	cmp	sl, r7
    9508:	2a000006 	bcs	9528 <endInnerImageLoop>
    950c:	e1a00005 	mov	r0, r5
    9510:	e1a01006 	mov	r1, r6
    9514:	e0d420b2 	ldrh	r2, [r4], #2
    9518:	ebffffc3 	bl	942c <Draw_Pixel>
    951c:	e28aa001 	add	sl, sl, #1
    9520:	e2855001 	add	r5, r5, #1
    9524:	eafffff6 	b	9504 <innerImageLoop>

00009528 <endInnerImageLoop>:
    9528:	e2899001 	add	r9, r9, #1
    952c:	e2866001 	add	r6, r6, #1
    9530:	e0455007 	sub	r5, r5, r7
    9534:	eaffffef 	b	94f8 <outerImageLoop>

00009538 <endOuterImageLoop>:
    9538:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    953c:	e12fff1e 	bx	lr

00009540 <Draw_Block>:
    9540:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    9544:	e1a04000 	mov	r4, r0
    9548:	e3a07020 	mov	r7, #32
    954c:	e3a08020 	mov	r8, #32
    9550:	e1a05001 	mov	r5, r1
    9554:	e0050597 	mul	r5, r7, r5
    9558:	e0d010b2 	ldrh	r1, [r0], #2
    955c:	e0855001 	add	r5, r5, r1
    9560:	e1a06002 	mov	r6, r2
    9564:	e0060697 	mul	r6, r7, r6
    9568:	e1d010b0 	ldrh	r1, [r0]
    956c:	e0866001 	add	r6, r6, r1
    9570:	e3a09000 	mov	r9, #0

00009574 <outerBlockLoop>:
    9574:	e1590008 	cmp	r9, r8
    9578:	2a00000d 	bcs	95b4 <endOuterBlockLoop>
    957c:	e3a0a000 	mov	sl, #0

00009580 <innerBlockLoop>:
    9580:	e15a0007 	cmp	sl, r7
    9584:	2a000006 	bcs	95a4 <endInnerBlockLoop>
    9588:	e1a00005 	mov	r0, r5
    958c:	e1a01006 	mov	r1, r6
    9590:	e0d420b2 	ldrh	r2, [r4], #2
    9594:	ebffffa4 	bl	942c <Draw_Pixel>
    9598:	e28aa001 	add	sl, sl, #1
    959c:	e2855001 	add	r5, r5, #1
    95a0:	eafffff6 	b	9580 <innerBlockLoop>

000095a4 <endInnerBlockLoop>:
    95a4:	e2899001 	add	r9, r9, #1
    95a8:	e2866001 	add	r6, r6, #1
    95ac:	e0455007 	sub	r5, r5, r7
    95b0:	eaffffef 	b	9574 <outerBlockLoop>

000095b4 <endOuterBlockLoop>:
    95b4:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    95b8:	e12fff1e 	bx	lr
    95bc:	000090e0 	.word	0x000090e0

000095c0 <Wait>:
    95c0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    95c4:	e59f1018 	ldr	r1, [pc, #24]	; 95e4 <endDelayLoop+0x8>
    95c8:	e5912000 	ldr	r2, [r1]
    95cc:	e0823000 	add	r3, r2, r0

000095d0 <delayLoop>:
    95d0:	e5914000 	ldr	r4, [r1]
    95d4:	e1540003 	cmp	r4, r3
    95d8:	3afffffc 	bcc	95d0 <delayLoop>

000095dc <endDelayLoop>:
    95dc:	e8bd47f0 	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    95e0:	e12fff1e 	bx	lr
    95e4:	3f003004 	.word	0x3f003004

000095e8 <InitUART>:
    95e8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    95ec:	e59f017c 	ldr	r0, [pc, #380]	; 9770 <WaitForCycles+0x10>
    95f0:	e3a01001 	mov	r1, #1
    95f4:	e5801000 	str	r1, [r0]
    95f8:	e59f0174 	ldr	r0, [pc, #372]	; 9774 <WaitForCycles+0x14>
    95fc:	e0211001 	eor	r1, r1, r1
    9600:	e5801000 	str	r1, [r0]
    9604:	e59f016c 	ldr	r0, [pc, #364]	; 9778 <WaitForCycles+0x18>
    9608:	e0211001 	eor	r1, r1, r1
    960c:	e5801000 	str	r1, [r0]
    9610:	e59f0164 	ldr	r0, [pc, #356]	; 977c <WaitForCycles+0x1c>
    9614:	e3a01003 	mov	r1, #3
    9618:	e5801000 	str	r1, [r0]
    961c:	e59f015c 	ldr	r0, [pc, #348]	; 9780 <WaitForCycles+0x20>
    9620:	e0211001 	eor	r1, r1, r1
    9624:	e5801000 	str	r1, [r0]
    9628:	e59f0144 	ldr	r0, [pc, #324]	; 9774 <WaitForCycles+0x14>
    962c:	e0211001 	eor	r1, r1, r1
    9630:	e5801000 	str	r1, [r0]
    9634:	e59f0148 	ldr	r0, [pc, #328]	; 9784 <WaitForCycles+0x24>
    9638:	e3a010c6 	mov	r1, #198	; 0xc6
    963c:	e5801000 	str	r1, [r0]
    9640:	e59f0140 	ldr	r0, [pc, #320]	; 9788 <WaitForCycles+0x28>
    9644:	e59f1140 	ldr	r1, [pc, #320]	; 978c <WaitForCycles+0x2c>
    9648:	e5801000 	str	r1, [r0]
    964c:	e3a0000e 	mov	r0, #14
    9650:	e3a01002 	mov	r1, #2
    9654:	eb000053 	bl	97a8 <SetGpioFunction>
    9658:	e3a0000f 	mov	r0, #15
    965c:	e3a01002 	mov	r1, #2
    9660:	eb000050 	bl	97a8 <SetGpioFunction>
    9664:	e59f0124 	ldr	r0, [pc, #292]	; 9790 <WaitForCycles+0x30>
    9668:	e0211001 	eor	r1, r1, r1
    966c:	e5801000 	str	r1, [r0]
    9670:	e3a00096 	mov	r0, #150	; 0x96
    9674:	eb000039 	bl	9760 <WaitForCycles>
    9678:	e59f0114 	ldr	r0, [pc, #276]	; 9794 <WaitForCycles+0x34>
    967c:	e3a01903 	mov	r1, #49152	; 0xc000
    9680:	e5801000 	str	r1, [r0]
    9684:	e3a00096 	mov	r0, #150	; 0x96
    9688:	eb000034 	bl	9760 <WaitForCycles>
    968c:	e59f0100 	ldr	r0, [pc, #256]	; 9794 <WaitForCycles+0x34>
    9690:	e0211001 	eor	r1, r1, r1
    9694:	e5801000 	str	r1, [r0]
    9698:	e59f00d8 	ldr	r0, [pc, #216]	; 9778 <WaitForCycles+0x18>
    969c:	e3a01003 	mov	r1, #3
    96a0:	e5801000 	str	r1, [r0]
    96a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000096a8 <PutCharUART>:
    96a8:	e59f20e8 	ldr	r2, [pc, #232]	; 9798 <WaitForCycles+0x38>

000096ac <putWaitLoop$>:
    96ac:	e5921000 	ldr	r1, [r2]
    96b0:	e3110020 	tst	r1, #32
    96b4:	0afffffc 	beq	96ac <putWaitLoop$>
    96b8:	e59f20dc 	ldr	r2, [pc, #220]	; 979c <WaitForCycles+0x3c>
    96bc:	e5820000 	str	r0, [r2]
    96c0:	e1a0f00e 	mov	pc, lr

000096c4 <GetCharUART>:
    96c4:	e59f20cc 	ldr	r2, [pc, #204]	; 9798 <WaitForCycles+0x38>

000096c8 <getWaitLoop$>:
    96c8:	e5921000 	ldr	r1, [r2]
    96cc:	e3110001 	tst	r1, #1
    96d0:	0afffffc 	beq	96c8 <getWaitLoop$>
    96d4:	e59f20c0 	ldr	r2, [pc, #192]	; 979c <WaitForCycles+0x3c>
    96d8:	e5920000 	ldr	r0, [r2]
    96dc:	e1a0f00e 	mov	pc, lr

000096e0 <WriteStringUART>:
    96e0:	e92d4030 	push	{r4, r5, lr}
    96e4:	e1a04000 	mov	r4, r0
    96e8:	e1a05001 	mov	r5, r1
    96ec:	e3a06000 	mov	r6, #0

000096f0 <writeLoop$>:
    96f0:	e3550000 	cmp	r5, #0
    96f4:	da000004 	ble	970c <writeLoopEnd$>
    96f8:	e7d40006 	ldrb	r0, [r4, r6]
    96fc:	ebffffe9 	bl	96a8 <PutCharUART>
    9700:	e2866001 	add	r6, r6, #1
    9704:	e2455001 	sub	r5, r5, #1
    9708:	eafffff8 	b	96f0 <writeLoop$>

0000970c <writeLoopEnd$>:
    970c:	e8bd8030 	pop	{r4, r5, pc}

00009710 <ReadLineUART>:
    9710:	e92d4070 	push	{r4, r5, r6, lr}
    9714:	e1a04000 	mov	r4, r0
    9718:	e1a05001 	mov	r5, r1
    971c:	e3a06000 	mov	r6, #0

00009720 <readLoop$>:
    9720:	e1360005 	teq	r6, r5
    9724:	0a00000b 	beq	9758 <readLoopEnd$>
    9728:	ebffffe5 	bl	96c4 <GetCharUART>
    972c:	ebffffdd 	bl	96a8 <PutCharUART>
    9730:	e5c40000 	strb	r0, [r4]
    9734:	e2866001 	add	r6, r6, #1
    9738:	e2844001 	add	r4, r4, #1
    973c:	e330000d 	teq	r0, #13
    9740:	1afffff6 	bne	9720 <readLoop$>
    9744:	e3a0000a 	mov	r0, #10
    9748:	ebffffd6 	bl	96a8 <PutCharUART>
    974c:	e2444001 	sub	r4, r4, #1
    9750:	e3a00000 	mov	r0, #0
    9754:	e5c40000 	strb	r0, [r4]

00009758 <readLoopEnd$>:
    9758:	e2460001 	sub	r0, r6, #1
    975c:	e8bd8070 	pop	{r4, r5, r6, pc}

00009760 <WaitForCycles>:
    9760:	e2400001 	sub	r0, r0, #1
    9764:	e3500000 	cmp	r0, #0
    9768:	aafffffc 	bge	9760 <WaitForCycles>
    976c:	e1a0f00e 	mov	pc, lr
    9770:	3f215004 	.word	0x3f215004
    9774:	3f215044 	.word	0x3f215044
    9778:	3f215060 	.word	0x3f215060
    977c:	3f21504c 	.word	0x3f21504c
    9780:	3f215050 	.word	0x3f215050
    9784:	3f215048 	.word	0x3f215048
    9788:	3f215068 	.word	0x3f215068
    978c:	0000010e 	.word	0x0000010e
    9790:	3f200094 	.word	0x3f200094
    9794:	3f200098 	.word	0x3f200098
    9798:	3f215054 	.word	0x3f215054
    979c:	3f215040 	.word	0x3f215040

000097a0 <GetGpioAddress>:
    97a0:	e59f00cc 	ldr	r0, [pc, #204]	; 9874 <GetGpio+0x44>
    97a4:	e1a0f00e 	mov	pc, lr

000097a8 <SetGpioFunction>:
    97a8:	e3500035 	cmp	r0, #53	; 0x35
    97ac:	93510007 	cmpls	r1, #7
    97b0:	81a0f00e 	movhi	pc, lr
    97b4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    97b8:	e1a02000 	mov	r2, r0
    97bc:	ebfffff7 	bl	97a0 <GetGpioAddress>

000097c0 <functionLoop$>:
    97c0:	e3520009 	cmp	r2, #9
    97c4:	8242200a 	subhi	r2, r2, #10
    97c8:	82800004 	addhi	r0, r0, #4
    97cc:	8afffffb 	bhi	97c0 <functionLoop$>
    97d0:	e0822082 	add	r2, r2, r2, lsl #1
    97d4:	e1a01211 	lsl	r1, r1, r2
    97d8:	e3a03007 	mov	r3, #7
    97dc:	e1a03213 	lsl	r3, r3, r2
    97e0:	e5902000 	ldr	r2, [r0]
    97e4:	e1c22003 	bic	r2, r2, r3
    97e8:	e1811002 	orr	r1, r1, r2
    97ec:	e5801000 	str	r1, [r0]
    97f0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

000097f4 <SetGpio>:
    97f4:	e3500035 	cmp	r0, #53	; 0x35
    97f8:	81a0f00e 	movhi	pc, lr
    97fc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    9800:	e1a02000 	mov	r2, r0
    9804:	ebffffe5 	bl	97a0 <GetGpioAddress>
    9808:	e1a032a2 	lsr	r3, r2, #5
    980c:	e1a03103 	lsl	r3, r3, #2
    9810:	e0800003 	add	r0, r0, r3
    9814:	e202201f 	and	r2, r2, #31
    9818:	e3a03001 	mov	r3, #1
    981c:	e1a03213 	lsl	r3, r3, r2
    9820:	e3310000 	teq	r1, #0
    9824:	05803028 	streq	r3, [r0, #40]	; 0x28
    9828:	1580301c 	strne	r3, [r0, #28]
    982c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

00009830 <GetGpio>:
    9830:	e3500035 	cmp	r0, #53	; 0x35
    9834:	81a0f00e 	movhi	pc, lr
    9838:	e92d4010 	push	{r4, lr}
    983c:	e1a04000 	mov	r4, r0
    9840:	ebffffd6 	bl	97a0 <GetGpioAddress>
    9844:	e1a032a4 	lsr	r3, r4, #5
    9848:	e1a03103 	lsl	r3, r3, #2
    984c:	e0800003 	add	r0, r0, r3
    9850:	e204401f 	and	r4, r4, #31
    9854:	e3a03001 	mov	r3, #1
    9858:	e1a03413 	lsl	r3, r3, r4
    985c:	e5904034 	ldr	r4, [r0, #52]	; 0x34
    9860:	e0044003 	and	r4, r4, r3
    9864:	e3340000 	teq	r4, #0
    9868:	03a00000 	moveq	r0, #0
    986c:	13a00001 	movne	r0, #1
    9870:	e8bd8010 	pop	{r4, pc}
    9874:	3f200000 	.word	0x3f200000
